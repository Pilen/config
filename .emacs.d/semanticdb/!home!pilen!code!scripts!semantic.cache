;; Object scripts/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "scripts/"
  :tables (list 
   (semanticdb-table "next-episode"
    :major-mode 'python-mode
    :tags 
        '( ("sys" include nil nil [20 30])
            ("os" include nil nil [31 40])
            ("re" include nil nil [41 50])
            ("subprocess" include nil nil [51 68])
            ("config" variable nil nil [70 122])
            ("trim" function (:arguments 
              ( ("dirpath" variable nil (reparse-symbol function_parameters) [133 140]))              ) nil [124 234])
            ("ls" function (:arguments 
              ( ("dirpath" variable nil (reparse-symbol function_parameters) [242 249]))              ) nil [235 355])
            ("naturalsort" function (:arguments 
              ( ("l" variable nil (reparse-symbol function_parameters) [372 373]))              ) nil [356 519])
            ("mplayer" function (:arguments 
              ( ("filename" variable nil (reparse-symbol function_parameters) [532 540]))              ) nil [520 714])
            ("openseries" function (:arguments 
              ( ("path" variable nil (reparse-symbol function_parameters) [731 735]))              ) nil [716 923])
            ("continue_series" function nil nil [924 1341])
            ("save" function (:arguments 
              ( ("filename" variable nil (reparse-symbol function_parameters) [1352 1360]))              ) nil [1343 1433])
            ("main" function (:arguments 
              ( ("args" variable nil (reparse-symbol function_parameters) [1443 1447]))              ) nil [1434 1682])
            ("if" code nil nil [1684 1730]))          
    :file "next-episode"
    :pointmax 1730
    :fsize 1729
    :lastmodtime '(20732 44796)
    :unmatched-syntax 'nil
    )
   )
  :file "!home!pilen!code!scripts!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.0"
  )
