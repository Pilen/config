;; Object strategies/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "strategies/"
  :tables (list 
   (semanticdb-table "random.py"
    :major-mode 'python-mode
    :tags 
        '( ("strategyInterface" include nil nil [1 39])
            ("print" code nil nil [41 61])
            ("Random" type
               (:superclasses ("Strategy")
                :members 
                  ( ("name" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [99 103]))                      ) (reparse-symbol indented_block_body) [90 130])
                    ("nextMove" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [147 151])
                        ("board" variable nil (reparse-symbol function_parameters) [153 158])
                        ("bikes" variable nil (reparse-symbol function_parameters) [160 165])
                        ("bike" variable nil (reparse-symbol function_parameters) [167 171]))                      ) (reparse-symbol indented_block_body) [134 194]))                  
                :type "class")
                nil [62 194]))          
    :file "random.py"
    :pointmax 194
    :fsize 193
    :lastmodtime '(20708 39415)
    :unmatched-syntax '(($EOI 194 . 194))
    )
   (semanticdb-table "__init__.py"
    :major-mode 'python-mode
    :tags 
        '( ("pkgutil" include nil nil [349 363])
            ("sys" include nil nil [364 374])
            ("load_all_modules_from_dir" function (:arguments 
              ( ("dirname" variable nil (reparse-symbol function_parameters) [407 414]))              ) nil [377 737])
            ("load_all_modules_from_dir" code nil nil [739 778]))          
    :file "__init__.py"
    :pointmax 777
    :fsize 778
    :lastmodtime '(20708 40199)
    :unmatched-syntax 'nil
    )
   )
  :file "!home!pilen!code!small!tron!strategies!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.0"
  )
